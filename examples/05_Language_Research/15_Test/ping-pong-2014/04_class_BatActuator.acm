class BatActuator(n,p1,tablerow,tablecolum,maxE)
  private
    p       := p1;
    p'      := [0,0,0];
    a       := [0,0,0];
    angle   := [0,0,0];
    energy  := 0;
    energy' := 0;
    // Mass of the bat
    m := 0.1;
    F := 0;
    mode := "Sample";
    v    := [0,0,0]; 
    // Visualize energy spent
    eb  := create Cylinder([0,0,0],tablerow,tablecolum);
    offset := 0;
    link1 := create Cylinder([0,0,0],tablerow,tablecolum);
    link2 := create Cylinder([0,0,0],tablerow,tablecolum);
    L1    := 0.4;  // Length of link1 is fixed
    baseP := [2.4*(-1)^n,0,0.3];
    unit  := [0,0,0]; // Unit vector from baseP to P
    timer := 0;       // timer for BatActuator
    timer':= 1;
  end

  switch mode
    case "Sample"
      v := p';
      mode := "Wait";
    case "Wait"
      timer' = 1;
      if (timer >= 0.01)
        mode := "Calculate";
      end;
    case "Calculate"
      a := (p' - v)/timer;
      timer := 0;
      mode := "Sample";
  end;
  
  F = m * norm(a);
  if norm(p') > 5 // ???Saturate??? speeds over 5
    p' := p'/norm(p') * 5 ;
  end;
  energy' = F * norm(p'); // Simplistic model of power consumed
  // Visualize arm
  unit = (p - baseP)/norm(p - baseP);
  link1.q = baseP;
  link1.p = baseP + L1 * unit;
  link1.radius = 0.1;
  link2.q = link1.p;
  link2.p = p +  [(-1)^n * 0.05,0,0];
  link2.radius = 0.03;
  // Energy bar visualization
  offset = (energy/maxE)*1.5;
  eb.p = [(-1)^n * 1.5, -0.8, -0.05];
  eb.q = [(-1)^n * 1.5 + (-1)^(n+1) * offset, -0.8, -0.05];
  eb.radius = 0.02;
  eb.color = [0.2,1,0.2];
end

