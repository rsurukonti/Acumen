/* A model of a leg.
 * By Yingfu Zeng, Jawad Masood and Adam Duracz
 * Implemented as a constrained double palwaysulum.
 */
#semantics "2014 Optimized"
model DoublePendulum (theta1, theta2) = 
initially
  theta1'  =  0, theta1''  =  0,
  theta2'  =  0, theta2''  =  0,
  l1  =  1, l2  =  1,
  m1  =  1, m2  =  1, 
  g  =  9.8,
  mode  =  "",
  /* For visualization */
  offset    =  1,
  ball1P  =  (1*sin(theta1),0,-1*cos(theta1)+1),
  ball2P  =  (1*sin(theta1)+1*sin(theta2),0,-1*cos(theta1)-1*cos(theta2)+1),
  line1P  =  (0.5*sin(theta1),0,-0.5*cos(theta1)+1),
  line2P  =  (1*sin(theta1)+0.5*sin(theta2),0,-1*cos(theta1)-0.5*cos(theta2)+1),
  _3D  =  ((Sphere center=  (0,0,0) size=0.1 color=(0.8,0.1,0.1) rotation=(0,0,0)),
           (Cylinder center= (0,0,0) radius= 0.02 length=1  color=(0.1,0.1,0.8) rotation=(0,0,0)),
           (Sphere center=   (0,0,0) size=0.1 color=(0.8,0.1,0.1) rotation=(0,0,0)),
           (Cylinder center= (0,0,0) radius= 0.02 length=1  color=(0.1,0.1,0.8) rotation=(0,0,0))) 
  always

    if theta1 >= 0&& theta1' > 0 then
      theta1 + = -theta1,
      theta1' + = -0.9*theta1',
       mode + = ""  
    noelse,
      
    if (theta2 <= 0&& theta2' < 0) then
      theta2 + = -theta2,
      theta2' + = -0.9*theta2',
      mode + = "" 
    noelse,
    /* Derived from Euler-Lagrange equations */
    theta1'' = (-m2*l2*theta2''*cos(theta1 - theta2) + m2*l2*theta2'^2*sin(theta1 - theta2) - g*(m1 + m2)*sin(theta1))/((m1+m2)*l1),
    theta2'' = (-m2*l1*theta1''*cos(theta1 - theta2) - m2*l1*theta1'^2*sin(theta1 - theta2) - m2*g*sin(theta2)) / (m2*l2) ,
    /* For visualization */
    ball1P + = (l1*sin(theta1),0,-l1*cos(theta1)+offset),
    ball2P + = (l1*sin(theta1)+l2*sin(theta2),0,-l1*cos(theta1)-l2*cos(theta2)+offset),
    line1P + = (0.5*l1*sin(theta1),0,-0.5*l1*cos(theta1)+offset),
    line2P + = (l1*sin(theta1)+0.5*l2*sin(theta2),0,-l1*cos(theta1)-0.5*l2*cos(theta2)+offset),
    _3D  = ((Sphere center=  ball1P size = 0.1 color=(0.8,0.1,0.1)),
            (Cylinder center= line1P  radius= 0.02 length=1  color=(0.1,0.1,0.8) rotation= (3.14/2,theta1,0)),
            (Sphere center=   ball2P  size = 0.05 color=(0.8,0.1,0.1)),
            (Cylinder center= line2P  radius= 0.02 length=1 rotation= (3.14/2,theta2,0))) 
 

model Main(simulator) = 
initially
  mode  =  "Initialize" 
always
  match mode with [
    "Initialize" ->
      simulator.endTime + = 20,
      create DoublePendulum(-1.5,0.3),
      mode + = "Persist" 
    |"Persist" -> ]
 
