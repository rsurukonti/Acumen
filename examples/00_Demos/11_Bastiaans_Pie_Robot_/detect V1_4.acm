// this model is buid to try out the detect function
model compare (p1,p2,theta,th)=
initially
x=0,y=0,
X=0,Y=0,
cos1=(p1(0)-p2(0))/sqrt((p2(0)-p1(0))^2+(p2(1)-p1(1))^2),
sin1=(p1(1)-p2(0))/sqrt((p2(0)-p1(0))^2+(p2(1)-p1(1))^2),
alpha= atan2 ((p2(1)-p1(1)),(p2(0)-p1(0))),

l=sqrt((p2(0)-p1(0))^2+(p2(1)-p1(1))^2),
point= ((p1(0)+p2(0))/2,(p1(1)+p2(1))/2), // tried negatief values

flag=0,


mode      =  "Persist"
always

if theta==0 then 
mode = "line" 
else
mode = "arc" ,
match mode with [
    
    


    "line" ->
       X=(x-point(0))*cos(alpha)-(y-point(1))*sin(alpha),
       Y=(x-point(0))*sin(alpha)+(y-point(1))*cos(alpha),
        if X<=l/2 &&  X>=-l/2 && Y<=th/2 && Y>=-th/2 then
           flag = 1
       else
           flag =0

   | "arc" ->
   
      X=(x-p2(0))*(p2(0)-p1(0))/l-(y-p2(1))*(p2(1)-p1(1))/l,
      Y=(x-p2(0))*(p2(1)-p1(1))/l+(y-p2(1))*(p2(0)-p1(0))/l,
         if l<=(sqrt(X^2+Y^2))+th &&  l>=(sqrt(X^2+Y^2))-th && theta>=atan2(Y,X) &&0<=atan2(Y,X) then
           flag = 1
       else
           flag =0 
   
   | "Persist" ->
 ]







//------------------
model detect (tr) = 
initially

det1= create compare (tr(1,0),tr(1,1),tr(1,2),tr(0)),
det2= create compare (tr(2,0),tr(2,1),tr(2,2),tr(0)), 
det3= create compare (tr(3,0),tr(3,1),tr(3,2),tr(0)),  
det4= create compare (tr(4,0),tr(4,1),tr(4,2),tr(0)), 
flag=0,
x=0,y=0

/*tr=(
         0.2,                                 
        ((-5,-5),(5,-5),0),
        ((5,-5),(5,0),pi),
        ((5,5),(-5,5),0),        
        ((-5,5),(-5,0),pi)
       
      )   */
      
     

   
always

det1.x=x,det1.y=y,
det2.x=x,det2.y=y,
det3.x=x,det3.y=y,
det4.x=x,det4.y=y,
 if det1.flag==1 || det2.flag==1|| det3.flag==1||  det4.flag==1  then
 flag=1
 else
 flag=0





/*
match mode with [
    "Initialize" ->
 a=length(tr), 
                                            X=x*cos(alpha)-y*sin(alpha)+point(0),
                                             Y=x*sin(alpha)+y*cos(alpha)+point(1),
                                             l=sqrt((tr(i,0,0)-tr(i,1,0))^2+(tr(i,0,1)-tr(i,1,1))^2),
                                              point=( (tr(i,0,0)+tr(i,1,0))/2  , (tr(i,0,1)+tr(i,1,1))/2   ),
                                             alpha= atan2 (    (tr(i,0,1)-tr(i,1,1))  ,  (tr(i,0,0)-tr(i,1,0))   ),
                                             
foreach i in 1:(length(tr)-1) do(
                                           
                                            
                                             
                             
                              if tr(i,2)==0 then    // line
                                 if     (x*cos(atan2 ((tr(i,0,1)-tr(i,1,1)),(tr(i,0,0)-tr(i,1,0))))-y*sin(atan2((tr(i,0,1)-tr(i,1,1)),(tr(i,0,0)-tr(i,1,0)))  )+   (tr(i,0,0)+tr(i,1,0))/2      )      
                                       <=        sqrt((tr(i,0,0)-tr(i,1,0))^2+(tr(i,0,1)-tr(i,1,1))^2)   /2     // check if x is smaller then L/2
                                       
                                    &&  (x*cos(atan2 ((tr(i,0,1)-tr(i,1,1)),(tr(i,0,0)-tr(i,1,0))))-y*sin(atan2((tr(i,0,1)-tr(i,1,1)),(tr(i,0,0)-tr(i,1,0)))  )+   (tr(i,0,0)+tr(i,1,0))/2      )  
                                          >=    -sqrt((tr(i,0,0)-tr(i,1,0))^2+(tr(i,0,1)-tr(i,1,1))^2)   /2    //  check if x is bigger then -L/2
                                    
                                    && (x*sin(    atan2 ((tr(i,0,1)-tr(i,1,1)), (tr(i,0,0)-tr(i,1,0))   )          )+y*cos(     atan2 (    (tr(i,0,1)-tr(i,1,1))  ,  (tr(i,0,0)-tr(i,1,0))   )          )+  (tr(i,0,1)+tr(i,1,1))/2 )     
                                           <=tr(0)/2 // check if Y is smaller then th/2
                                    
                                    && (x*sin(    atan2 ((tr(i,0,1)-tr(i,1,1)), (tr(i,0,0)-tr(i,1,0))   )          )+y*cos(     atan2 (    (tr(i,0,1)-tr(i,1,1))  ,  (tr(i,0,0)-tr(i,1,0))   )          )+  (tr(i,0,1)+tr(i,1,1))/2 ) 
                                         >=-tr(0)/2 // check if Y is smaller then th/2
                                 then
                                      flag =1
                                  noelse
                                      

                              else     // arc
                                if l<=(sqrt(X^2+Y^2))+th &&  l>=(sqrt(X^2+Y^2))-th && theta<=atan2(Y,X) && theta>=0 then
                                  flag = 1
                                
                                )
                                
   | "next" ->  
 



    mode + = "Persist"
  | "Persist" -> ]
                                
                                
                                
                                
                                
                                
                                ,
  x'=3
        /*
         model line (p1,p2)=
initially

alpha= atan2 ((p2(1)-p1(1)),(p2(0)-p1(0))),
l=sqrt((p2(0)-p1(0))^2+(p2(1)-p1(1))^2),
point= ((p1(0)+p2(0))/2,(p1(1)+p2(1))/2)
         * 
         * 
 model arc (p,m,theta)=
initially

point= (m(0),m(1)),
alpha= atan2((p(1)-m(1)),(p(0)-m(0))),
r=sqrt((p(0)-m(0))^2+(p(1)-m(1))^2)
        * 
         * 
         * 
             */
