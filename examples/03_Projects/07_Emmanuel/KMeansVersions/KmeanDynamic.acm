//Explaination for the K-Means clustering algorithm using Acumen on dynmic data
//
// Author: Emmanuel Brelle

#include "../TextPlotter.acm"

model Main (simulator)=
initially
t=0,t'=0, 
step =0, phase ="wait",
topLeft = ((-1.2,0,5),(-2,0,7.5),(-2,0,7.5),(-2,0,7.5),(-2,0,7.5),
            (-2,0,8.5),(-2,0,8.5),(-2,0,8.5),(-2,0,5.5),(-2,0,6),
            (-2,0,6)),
phaseDuration = (4,  24,18,11,6,  37,33,29,25, 10,0,0),
nextPhaseStart = (4,  6,7,5,6,  4,4,4,25,  10,0,0),
titleFontSize =1,
subTitleFontSize = 0.5,
textFontSize = 0.5,
_3DView =((5.5,-23,3.5),(4.5,0,4.5))
always
t'=1,
simulator.endTime += sum nextPhaseStart(i) for i in 0:10 ,
if t > nextPhaseStart(step) then 
  t+=0,
  step += step +1,
  phase +="wait" 
noelse,

if  phase == "wait" then     phase +="run",
  match step with [
  0 ->  
    create TimedText ("K-Means on Dynamic Data",titleFontSize,topLeft(step),0,phaseDuration(step),blue),
    create TimedText ("by Emmanuel Brelle",subTitleFontSize,topLeft(step)+(3.5,0,-titleFontSize-textFontSize),0,phaseDuration(step),blue)

    
  | 1 -> 
    create TimedText ("This video illustrates the k-means clustering algorithm", textFontSize,topLeft(step),0,phaseDuration(step),blue),
    create TimedText ("on dynamic input data", textFontSize,topLeft(step)+(0,0,-textFontSize),0,phaseDuration(step),blue)
  | 2 -> 
    create TimedText ("K-means groups data by proximity to one of the k mean values", textFontSize,topLeft(step)+(0,0,-textFontSize*3),0,phaseDuration(step),blue),
    create TimedText ("and then updates the means", textFontSize,topLeft(step)+(0,0,-textFontSize*4),0,phaseDuration(step),blue)
  | 3 ->
    create TimedText ("The input data are 30 two-dimensional values", textFontSize,topLeft(step)+(0,0,-textFontSize*6),0,phaseDuration(step),blue)
  | 4 ->
    create TimedText ("K-means selects a group (color) for each point among", textFontSize,topLeft(step)+(0,0,-textFontSize*8),0,phaseDuration(step),blue),
    create TimedText ("three groups (k=3)", textFontSize,topLeft(step)+(0,0,-textFontSize*9),0,phaseDuration(step),blue)

  
  | 5 ->
    create DynaKmeans(22,12,3),
    create TimedText ("Each data point is represented by a ball.", textFontSize,topLeft(step),0,phaseDuration(step),blue)
  | 6 -> 
    create TimedText ("The color of the ball represents the group it was put in.", textFontSize,topLeft(step)+(0,0,-textFontSize*2),0,phaseDuration(step),blue)
  | 7 ->
    create TimedText ("Crosses represent means.",textFontSize,topLeft(step)+(0,0,-textFontSize*4),0,phaseDuration(step),blue)
  | 8 ->
    create TimedText ("Boxes move in discrete steps because ", textFontSize,topLeft(step),0,phaseDuration(step),blue),
    create TimedText ("the algorithm is updated every 0.5 seconds", textFontSize,topLeft(step)+(0,0,-textFontSize*1),0,phaseDuration(step),blue)
  | 9 ->
    create TimedText ("Thank you for watching!", titleFontSize,topLeft(step)+(1,0,0),0,phaseDuration(step),blue),
    create TimedText ("The Effective Modeling Group", textFontSize,topLeft(step)+(3,0,-titleFontSize-textFontSize),0,phaseDuration(step),blue),
    create TimedText ("(effective-modeling.org)",textFontSize,topLeft(step)+(3.5,0,-titleFontSize-textFontSize*3),0,phaseDuration(step),blue)
  ]
noelse

model DynaKmeans (tPauseBegin, tStop,tPauseEnd)=
initially
n=29,m=2,means = ((0,0),(0.2,0.4),(0.4,0.8)),
center = (-1.5,0,1), center' =(0,0,0),
stepBeforeRun= 1,
t0 = -tPauseBegin, t0' = 1,
t=0,t'=0,
ballSize = 0.1, cubeSize= 0.17,
data  = (
  (0,0),(0.2,0.4),(0.4,0.8),(0.6,1.2),(0.8,0.8),
  (1,0.4),(1.2,0),(0.5,0.4),(0.7,0.4),(1.8,0), 
  (0,0),(0.2,0.4),(0.4,0.8),(0.6,1.2),(0.8,0.8),
  (1,0.4),(1.2,0),(0.5,0.4),(0.7,0.4),(1.8,0),
  (0,0),(0.2,0.4),(0.4,0.8),(0.6,1.2),(0.8,0.8),
  (1,0.4),(1.2,0),(0.5,0.4),(0.7,0.4),(1.8,0))*2,
data'  = ((0,0),(0,0),(0,0),(0,0),(0,0),
  (0,0),(0,0),(0,0),(0,0),(0,0),
  (0,0),(0,0),(0,0),(0,0),(0,0),
  (0,0),(0,0),(0,0),(0,0),(0,0),
  (0,0),(0,0),(0,0),(0,0),(0,0),
  (0,0),(0,0),(0,0),(0,0),(0,0)
  ),
belonging = (-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1),
color = (white,white,white,white,white,white,white,white,white,white,
white,white,white,white,white,white,white,white,white,white
,white,white,white,white,white,white,white,white,white,white),
_3D=()
always
 t0'= 1,
if t0 > tStop+tPauseEnd then terminate self noelse,
if(t0>=0 && t0< tStop )then
data'  = (
(0.81,0.2),(0.52,0.15),(0.24,0.18),(0.16,0.32),(0.18,0.34),
(0.46,0.42),(0.38,0.2),(0.35,0.41),(0.27,0.46),(0.47,0.24),
(0.82,0.35),(0.32,0.14),(0.74,0.28),(0.49,0.32),(0.48,0.54),
(0.13,0.32),(0.29,0.75),(0.51,0.41),(0.17,0.48),(0.18,0.78),
(0.43,0.46),(0.22,0.47),(0.46,0.84),(0.58,0.77),(0.14,0.87),
(0.38,0.45),(0.27,0.75),(0.52,0.43),(0.41,0.34),(0.38,0.15)
)/2.5,
t'=2,
center'=(0.5,0.1*t,-0.3*t),
//Definition for the initial means
if stepBeforeRun== 1 then 
  if t> 0.5 then t+=0,
  means(0) += data(0),
  means(1) += data(1),
  means(2) += data(2), 
  stepBeforeRun +=0
  noelse
else (
//Find for each data the closest mean
if t>0.5  then
foreach i in 0:n do 
  if (norm(means(0)-data(i)) <= norm(means(1)-data(i)) 
    && norm(means(0)-data(i)) <= norm(means(2)-data(i)))then 
    belonging(i) +=0,color(i)+= yellow
  else  if (norm(means(1)-data(i)) <= norm(means(0)-data(i)) 
    && norm(means(1)-data(i)) <= norm(means(2)-data(i)))then
    belonging(i) +=1,color(i)+= red
  else
    (belonging(i) +=2,color(i)+= (0,0.5,0.1))
noelse,
//Compute the mean of the news sets
if(t > 1 )then
  t+= 0,
  foreach k in 0:m do
    means(k) += (
      sum data(i,0)/(sum 1 for i in  0:n  if belonging(i)==k) for i in  0:n if belonging(i)==k,
      sum data(i,1)/(sum 1 for i in  0:n  if belonging(i)==k) for i in  0:n if belonging(i)==k
      )
  noelse
)
else(
  center'=(0,0,0),t'=0,
  data'  = ((0,0),(0,0),(0,0),(0,0),(0,0),
  (0,0),(0,0),(0,0),(0,0),(0,0),
  (0,0),(0,0),(0,0),(0,0),(0,0),
  (0,0),(0,0),(0,0),(0,0),(0,0),
  (0,0),(0,0),(0,0),(0,0),(0,0),
  (0,0),(0,0),(0,0),(0,0),(0,0)
  )
  ),
_3D = (
  Sphere size=ballSize center=center+(data(0,0),0,data(0,1)) color=color(0),
  Sphere size=ballSize center=center+(data(1,0),0,data(1,1)) color=color(1),
  Sphere size=ballSize center=center+(data(2,0),0,data(2,1)) color=color(2),
  Sphere size=ballSize center=center+(data(3,0),0,data(3,1)) color=color(3),
  Sphere size=ballSize center=center+(data(4,0),0,data(4,1)) color=color(4),
  Sphere size=ballSize center=center+(data(5,0),0,data(5,1)) color=color(5),
  Sphere size=ballSize center=center+(data(6,0),0,data(6,1)) color=color(6),
  Sphere size=ballSize center=center+(data(7,0),0,data(7,1)) color=color(7),
  Sphere size=ballSize center=center+(data(8,0),0,data(8,1)) color=color(8),
  Sphere size=ballSize center=center+(data(9,0),0,data(9,1)) color=color(9),
  Sphere size=ballSize center=center+(data(10,0),0,data(10,1)) color=color(10),
  Sphere size=ballSize center=center+(data(11,0),0,data(11,1)) color=color(11),
  Sphere size=ballSize center=center+(data(12,0),0,data(12,1)) color=color(12),
  Sphere size=ballSize center=center+(data(13,0),0,data(13,1)) color=color(13),
  Sphere size=ballSize center=center+(data(14,0),0,data(14,1)) color=color(14),
  Sphere size=ballSize center=center+(data(15,0),0,data(15,1)) color=color(15),
  Sphere size=ballSize center=center+(data(16,0),0,data(16,1)) color=color(16),
  Sphere size=ballSize center=center+(data(17,0),0,data(17,1)) color=color(17),
  Sphere size=ballSize center=center+(data(18,0),0,data(18,1)) color=color(18),
  Sphere size=ballSize center=center+(data(19,0),0,data(19,1)) color=color(19),
  Sphere size=ballSize center=center+(data(20,0),0,data(20,1)) color=color(20),
  Sphere size=ballSize center=center+(data(21,0),0,data(21,1)) color=color(21),
  Sphere size=ballSize center=center+(data(22,0),0,data(22,1)) color=color(22),
  Sphere size=ballSize center=center+(data(23,0),0,data(23,1)) color=color(23),
  Sphere size=ballSize center=center+(data(24,0),0,data(24,1)) color=color(24),
  Sphere size=ballSize center=center+(data(25,0),0,data(25,1)) color=color(25),
  Sphere size=ballSize center=center+(data(26,0),0,data(26,1)) color=color(26),
  Sphere size=ballSize center=center+(data(27,0),0,data(27,1)) color=color(27),
  Sphere size=ballSize center=center+(data(28,0),0,data(28,1)) color=color(28),
  Sphere size=ballSize center=center+(data(29,0),0,data(29,1)) color=color(29),
  
  Box size=(cubeSize,cubeSize,cubeSize) center=center+(means(0,0),0,means(0,1)) color=(1,0.7,0.3),
  Cylinder length=cubeSize*3 radius=cubeSize*0.2 rotation=(pi/2,0,0) center=center+(means(0,0),0,means(0,1)) color=(1,0.7,0.3),
  Cylinder length=cubeSize*3 radius=cubeSize*0.2 rotation=(0,0,pi/2) center=center+(means(0,0),0,means(0,1)) color=(1,0.7,0.3),
  Box size=(cubeSize,cubeSize,cubeSize) center=center+(means(1,0),0,means(1,1)) color=(1,0.5,0.7),
  Cylinder length=cubeSize*3 radius=cubeSize*0.2 rotation=(pi/2,0,0)  center=center+(means(1,0),0,means(1,1)) color=(1,0.5,0.7),
  Cylinder length=cubeSize*3 radius=cubeSize*0.2 rotation=(0,0,pi/2) center=center+(means(1,0),0,means(1,1)) color=(1,0.5,0.7),
  Box size=(cubeSize,cubeSize,cubeSize) center=center+(means(2,0),0,means(2,1)) color=(0.2,0.8,0.2),
  Cylinder length=cubeSize*3 radius=cubeSize*0.2 rotation=(pi/2,0,0) center=center+(means(2,0),0,means(2,1)) color=(0.2,0.8,0.2),
  Cylinder length=cubeSize*3 radius=cubeSize*0.2 rotation=(0,0,pi/2) center=center+(means(2,0),0,means(2,1)) color=(0.2,0.8,0.2)
  )