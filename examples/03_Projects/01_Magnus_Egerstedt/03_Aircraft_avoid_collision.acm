
// Magnus Egerstedt aircraft collision avoidance
// problem

model aircraft (w,c,s) =
initially
  phi = pi/2, phi' = 0,
  p = (0,0), p' = (0,0),
  x = 0, y = 0,
  _3D = ()
always
  _3D  = (Box center=(x,y,0) size=(0.1,0.1,0.1) color=c rotation=(0,0,0)),
  x    = p(0),
  y    = p(1),
  p'   = s*(cos(phi), sin(phi)),
  phi' = w

model controller () =
initially 
  i1 = (0,0), // Direction to goal
  i2 = 0,     // Current heading
  o  = 0,
  g  = 0      // Error in angle to goal
always
  g = atan2(i1(1), i1(0)) - i2,
  o = 2*atan2(sin(g),cos(g))

model controller2 () =
initially 
  i1 = (0,0), // Direction to goal
  i2 = 0,     // Current heading
  d  = 0,     // Distance to goal
  o  = 0,
  g  = 0,     // Error in angle to goal
  mode = "Straight",
  _3D = ()
always
  d = norm(i1),
  g = atan2(i1(1), i1(0)) - i2,
  match mode with [ 
    "Straight" ->
      _3D = (Box center=(0,0,0) size=(0.1,0.1,0.1) color=(1,0,0) rotation=(0,0,0)),
      o = 0, // Can be undertain
      if d<0.5 && g<0 then
        mode+ = "Right"
      else
        if d<0.5 && g>=0 then
          mode+ = "Left"
        noelse
  | "Right" ->
      _3D = (Box center=(0,0,0) size=(0.1,0.1,0.1) color=(0,1,0) rotation=(0,0,0)),
      o = 2,  // Can be uncertain
      if d>0.55 then mode+ = "Straight" noelse
  | "Left" ->
      _3D = (Box center=(0,0,0) size=(0.1,0.1,0.1) color=(0,0,1) rotation=(0,0,0)), 
      o = -2, // Can be uncertain
      if d>0.55 then mode+ = "Straight" noelse]

model Main(simulator) =
initially
  a = create aircraft (1,(1,0,0),0.7), // lead
  b = create aircraft (0,(0,1,0),0.8), // follower
  c = create aircraft (0,(0,0,1),1),   // clown :-)
  c1 = create controller (),
  c2 = create controller (),
  c3 = create controller2 (),
  mode = "Init"
always
  match mode with [ 
    "Init" ->
      a.p+ = (0,0), // Can be uncertain
      b.p+ = (0,1), // Can be uncertain
      c.p+ = (1,0), // Can be uncertain
      mode+ = "Persist"
  | "Persist" ->
      c1.i1 = (a.p-b.p), c1.i2 = b.phi,
      b.w   = c1.o,
      c2.i1 = (b.p-c.p), c2.i2 = c.phi,
      c.w   = c2.o, 
      c3.i1 = (a.p-b.p), c3.i2 = a.phi,
      a.w   = c3.o ]
