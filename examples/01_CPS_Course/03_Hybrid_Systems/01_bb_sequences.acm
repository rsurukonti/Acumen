
model BB()= // Basic bouncing ball 
initially
  x = 5, x' = 0, x'' = 0
always
  if x<=0&& x'<0 then
    x'+ = - 0.5 * x'
  else
    x''=-9.8

model BB_drag()= // Bouncing ball with (air) drag
initially
  x = 5, x' = 0, x'' = 0 
always
  if x<=0&& x'<0 then
    x'+ = - 0.5 * x'
  else
    x''=-9.8 - 0.1*x'*abs(x')


model BB_grav()=  // Bouncing ball with Newtonian (1/r^2) gravity
initially
  x = 5, x' = 0, x'' = 0
always
  if x<=0&& x'<0 then
    x' + = - 0.5 * x'
  else
    x''= -5000 /(20+x)^2

model BB_drag_grav()=  // Bouncing ball with gravity and drag   
initially
  x = 5, x' = 0, x'' = 0 
always
  if x<=0&& x'<0 then
    x' + = - 0.5 * x'
  else
    x''= -5000 /(20+x)^2 - 0.1*x'*abs(x')

model BB_dg_2D()=  // Bouncing ball with gravity and drag in 2D   
initially
  p = (30,0), p' = (0,10), p'' = (-8,-2.5),
  r = 30, u = (1,0), sn = 0, st = (0,10),
  _3D = (Cylinder center=(0,0,0) radius= 2.0 length=0.01 color=yellow rotation=(0,0,pi/2),
         Sphere center=(0,0,0) size=0.35 color=magenta rotation=(0,0,0))
always
  _3D = (Cylinder center=(0,0,0) radius= 2.0 length=0.01  color=yellow rotation=(0,0,pi/2),
         Sphere center=(0,p(0)/10,p(1)/10) size=0.05 color=magenta rotation=(0,0,0)),
  r  = norm(p),         // Distance from origin
  u  = (1/r)*p,         // Unit from origin
  sn = p'dot u,      // Speed normal to surface
  st = p' - (sn*u),     // Speed along surface
  
  if r <= 20&& (p'dot u) < 0 then
    p'+ = p' - (1.8* (p' dot u)*u)
  else
    p''= - 0.01*norm(p')*p' - (5000 /(r)^2)*u

model Main (simulator)= 
initially
  a = create BB_dg_2D () 
 
