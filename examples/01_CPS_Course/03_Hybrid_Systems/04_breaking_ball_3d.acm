
model Ball(mode, p, p', p'', m) = 
initially
    ux  =  (1,0,0),
    uy  =  (0,1,0),
    uz  =  (0,0,1),
    plane  =  (1,1,0)
always
  match mode with [
  "Fly" -> if (uz dot p) < 0&& (uz dot p') < 0 then
             if (abs(uz dot p') > 1) then
               create Ball("Bounce",p,
                           (norm(p' .* plane) * cos(atan2((uy dot p'), (ux dot p')) + 3.14/8),
                            norm(p' .* plane) * sin(atan2((uy dot p'), (ux dot p')) + 3.14/8),
                            (uz dot p')),
                            (0,0,0),
                            m/2),
               create Ball("Bounce",p,
                           (norm(p' .* plane) * cos(atan2((uy dot p'), (ux dot p')) - 3.14/8),
                            norm(p' .* plane) * cos(atan2((uy dot p'), (ux dot p')) - 3.14/8),
                            (uz dot p')),
                            (0,0,0),
                            m/2),
              terminate self
            else
              mode + = "Slide"
          else
            p'' = (0,0,-9.8)
  | "Bounce" -> p' + = p' .* (0.8, 0.8, -0.8),
                mode + = "Fly"
  | "Slide" ->  if (norm(p') > 0.01) then
                  p'' = p' .* (-1,-1,1)
                else
                  mode + = "Persist"
  | "Persist" -> 
  ]
   
model Main(simulator) = 
  initially
    mode  =  "Init"
  always
  match mode with [
  "Init" -> simulator.timeStep + = 0.01,
            simulator.endTime + = 3.5,
            create Ball("Fly", (0,0,1), (1,-1,0), (0,0,0), 2),
            mode + = "Persist"
  | "Persist" ->
  ]
